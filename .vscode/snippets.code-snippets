{
  // React Native
  "New React Native Component": {
    "prefix": "nrnc",
    "scope": "typescript,typescriptreact",
    "description": "New React Native Component",
    "body": [
      "// Modules",
      "import React from \"react\";",
      "import { View } from \"react-native\";",
      "",
      "// Types",
      "interface ${1:ComponentName}CommonProps {}",
      "export interface ${1:ComponentName}UiProps extends ${1:ComponentName}CommonProps {}",
      "export interface ${1:ComponentName}Props extends ${1:ComponentName}CommonProps {}",
      "",
      "// Component: Presentation",
      "export const ${1:ComponentName}Ui = ({}: ${1:ComponentName}UiProps): React.ReactElement => {",
      "  return <View className=\"flex-1\">$0</View>;",
      "};",
      "",
      "// Component: Logic",
      "export const ${1:ComponentName} = ({}: ${1:ComponentName}Props): React.ReactElement => {",
      "  return <${1:ComponentName}Ui />;",
      "};",
      "",
    ],
  },
  // React Native
  "New Memoized React Native Component": {
    "prefix": "nmrnc",
    "scope": "typescript,typescriptreact",
    "description": "New Memoized React Native Component",
    "body": [
      "// Modules",
      "import React from \"react\";",
      "import { View } from \"react-native\";",
      "",
      "// Types",
      "interface ${1:ComponentName}CommonProps {}",
      "export interface ${1:ComponentName}UiProps extends ${1:ComponentName}CommonProps {}",
      "export interface ${1:ComponentName}Props extends ${1:ComponentName}CommonProps {}",
      "",
      "// Component: Presentation",
      "export const ${1:ComponentName}Ui = ({}: ${1:ComponentName}UiProps): React.ReactElement => {",
      "  return <View className=\"flex-1\">$0</View>;",
      "};",
      "",
      "// Component: Logic",
      "export const ${1:ComponentName}Logic = (props: ${1:ComponentName}Props): React.ReactElement => {",
      "  return <${1:ComponentName}Ui {...props} />;",
      "};",
      "",
      "// Component: Memo",
      "export const ${1:ComponentName} = React.memo((props: ${1:ComponentName}Props): React.ReactElement => {",
      "  return <${1:ComponentName}Logic {...props} />;",
      "});",
      "",
    ],
  },
}
